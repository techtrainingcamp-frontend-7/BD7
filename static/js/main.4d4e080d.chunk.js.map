{"version":3,"sources":["routes.ts","containers/Demo/index.tsx","App.tsx","reportWebVitals.ts","models.ts","containers/Demo/model.ts","store.ts","index.tsx"],"names":["routes","path","component","connect","state","demo","dispatch","withRouter","history","className","location","pathname","onClick","SET_COUNT","count","a","getPlayers","players","length","map","player","id","first_name","RouteWithSubRoutes","route","render","props","App","basename","process","i","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","models","createModel","reducers","newCount","SET_PLAYERS","effects","fetch","response","json","data","store","init","plugins","immerPlugin","ReactDOM","StrictMode","document","getElementById"],"mappings":"gRAGaA,G,MAAwB,CACnC,CACEC,KAAM,QACNC,UCsDWC,aAtDE,SAACC,GAAD,MAAuB,CACtCA,MAAOA,EAAMC,SAEK,SAACC,GAAD,MAAyB,CAC3CA,SAAUA,EAASD,QAkDNF,CAA+BI,aA5ClB,SAAC,GAAkC,IAAhCH,EAA+B,EAA/BA,MAAOE,EAAwB,EAAxBA,SAAUE,EAAc,EAAdA,QAC9C,OACE,sBAAKC,UAAU,OAAf,UACE,sBAAKA,UAAU,aAAf,2CAAkCD,EAAQE,SAASC,YACnD,gCACE,wBACEF,UAAU,cACVG,QAAS,WACPN,EAASO,UAAUT,EAAMU,MAAQ,IAHrC,uBAQA,wBACEL,UAAU,cACVG,QAAS,WACPN,EAASO,UAAUT,EAAMU,MAAQ,IAHrC,yBAQA,sBAAKL,UAAU,eAAf,qBAAuCL,EAAMU,YAE/C,wBACEL,UAAU,cACVG,QAAO,sBAAE,sBAAAG,EAAA,sEACDT,EAASU,aADR,2CAFX,2BAQCZ,EAAMa,QAAQC,OACb,6BACGd,EAAMa,QAAQE,KAAI,SAACC,GAAD,OACjB,sBAAKX,UAAU,cAAf,UACGW,EAAOC,GADV,KACgBD,EAAOE,aADWF,EAAOC,SAK3C,eClCJE,EAAqB,SAACC,GAC1B,OACE,cAAC,IAAD,CACEvB,KAAMuB,EAAMvB,KACZwB,OAAQ,SAACC,GAAD,OAEN,aADA,CACCF,EAAMtB,UAAP,2BAAqBwB,GAArB,IAA4B1B,OAAQwB,EAAMxB,cAMnC2B,EA7BH,WACV,OACE,cAAC,IAAD,CAAQC,SAAUC,GAAlB,SACE,qBAAKpB,UAAU,MAAf,SACE,cAAC,IAAD,UACGT,EAAOmB,KAAI,SAACK,EAAOM,GAAR,OACV,cAAC,EAAD,eAAgCN,GAAPM,aCKtBC,EAbS,SAACC,GACnBA,GAAeA,aAAuBC,UAExC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,QCHDQ,EAAoB,CAAEnC,KCMfoC,cAAyB,CAC3CrC,MANyC,CACzCU,MAAO,EACPG,QAAS,IAKTyB,SAAU,CAER7B,UAAW,SAACT,EAAkBuC,GAE5B,OADAvC,EAAMU,MAAQ6B,EACPvC,GAETwC,YAAa,SAACxC,EAAkBa,GAE9B,OADAb,EAAMa,QAAUA,EACTb,IAGXyC,QAAS,SAACvC,GAAc,IACdD,EAASC,EAATD,KACR,MAAO,CAECW,WAFD,WAE6B,OAAD,8HACR8B,MACrB,6CAF6B,cACzBC,EADyB,gBAISA,EAASC,OAJlB,gBAIvBC,EAJuB,EAIvBA,KACR5C,EAAKuC,YAAYK,GALc,mD,QCxB1BC,EAAQC,YAAgB,CACnCX,SACAY,QAAS,CAACC,iBCAZC,IAAS7B,OACP,cAAC,IAAM8B,WAAP,UACE,cAAC,IAAD,CAAUL,MAAOA,EAAjB,SACE,cAAC,EAAD,QAGJM,SAASC,eAAe,SAM1B1B,M","file":"static/js/main.4d4e080d.chunk.js","sourcesContent":["import Demo from './containers/Demo'\n\n/* 集中存放所有路由配置 */\nexport const routes: RouteConfig[] = [\n  {\n    path: '/demo',\n    component: Demo,\n  },\n]\n\nexport interface RouteConfig {\n  /* 路由路径 */\n  path: string\n  /* 需要渲染的组件 */\n  component: React.FC\n  /* 子路由 */\n  routes?: RouteConfig[]\n}\n","import React, { FC } from 'react'\nimport { connect } from 'react-redux'\nimport { RouteComponentProps, withRouter } from 'react-router-dom'\nimport { Dispatch, RootState } from '@/store'\nimport './index.less'\n\nconst mapState = (state: RootState) => ({\n  state: state.demo,\n})\nconst mapDispatch = (dispatch: Dispatch) => ({\n  dispatch: dispatch.demo,\n})\nexport type HomeProps = ReturnType<typeof mapState> &\n  ReturnType<typeof mapDispatch> &\n  RouteComponentProps\n\nconst Demo: FC<HomeProps> = ({ state, dispatch, history }) => {\n  return (\n    <div className=\"demo\">\n      <div className=\"demo-route\">当前路由：{history.location.pathname}</div>\n      <div>\n        <button\n          className=\"demo-button\"\n          onClick={() => {\n            dispatch.SET_COUNT(state.count + 1)\n          }}\n        >\n          Add count\n        </button>\n        <button\n          className=\"demo-button\"\n          onClick={() => {\n            dispatch.SET_COUNT(state.count - 1)\n          }}\n        >\n          Minus Count\n        </button>\n        <div className=\"demo-counter\">counter {state.count}</div>\n      </div>\n      <button\n        className=\"demo-button\"\n        onClick={async () => {\n          await dispatch.getPlayers()\n        }}\n      >\n        Fetch Players\n      </button>\n      {state.players.length ? (\n        <ol>\n          {state.players.map((player) => (\n            <div className=\"demo-player\" key={player.id}>\n              {player.id}, {player.first_name}\n            </div>\n          ))}\n        </ol>\n      ) : null}\n    </div>\n  )\n}\n\nexport default connect(mapState, mapDispatch)(withRouter(Demo))\n","import React from 'react'\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\nimport { RouteConfig, routes } from './routes'\n\nconst App = (): JSX.Element => {\n  return (\n    <Router basename={process.env.PUBLIC_URL}>\n      <div className=\"App\">\n        <Switch>\n          {routes.map((route, i) => (\n            <RouteWithSubRoutes key={i} {...route} />\n          ))}\n        </Switch>\n      </div>\n    </Router>\n  )\n}\n\n// A special wrapper for <Route> that knows how to\n// handle \"sub\"-routes by passing them in a `routes`\n// prop to the component it renders.\nconst RouteWithSubRoutes = (route: RouteConfig): JSX.Element => {\n  return (\n    <Route\n      path={route.path}\n      render={(props: any) => (\n        // pass the sub-routes down to keep nesting\n        <route.component {...props} routes={route.routes} />\n      )}\n    />\n  )\n}\n\nexport default App\n","import { ReportHandler } from 'web-vitals'\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler): void => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry)\n      getFID(onPerfEntry)\n      getFCP(onPerfEntry)\n      getLCP(onPerfEntry)\n      getTTFB(onPerfEntry)\n    })\n  }\n}\n\nexport default reportWebVitals\n","import { Models } from '@rematch/core'\nimport { demo } from '@/containers/Demo/model'\n\nexport interface RootModel extends Models<RootModel> {\n  demo: typeof demo\n}\n\nexport const models: RootModel = { demo }\n","import { createModel } from '@rematch/core'\nimport { RootModel } from '@/models'\n\nexport interface HomeState {\n  count: number\n  players: PlayerModel[]\n}\n\nexport const defaultHomeState: HomeState = {\n  count: 0,\n  players: [],\n}\n\nexport const demo = createModel<RootModel>()({\n  state: defaultHomeState,\n  reducers: {\n    // 直接修改 state 的 demo\n    SET_COUNT: (state: HomeState, newCount: number) => {\n      state.count = newCount\n      return state\n    },\n    SET_PLAYERS: (state: HomeState, players: PlayerModel[]) => {\n      state.players = players\n      return state\n    },\n  },\n  effects: (dispatch) => {\n    const { demo } = dispatch\n    return {\n      // 异步请求 demo\n      async getPlayers(): Promise<any> {\n        const response = await fetch(\n          'https://www.balldontlie.io/api/v1/players',\n        )\n        const { data }: { data: any[] } = await response.json()\n        demo.SET_PLAYERS(data)\n      },\n    }\n  },\n})\n\nexport interface Team {\n  id: number\n  abbreviation: string\n  city: string\n  conference: string\n  division: string\n  full_name: string\n  name: string\n}\n\nexport interface PlayerModel {\n  id: number\n  first_name: string\n  last_name: string\n  position: string\n  height_feet: number\n  height_inches: number\n  weight_pounds: number\n  team: Team\n}\n","// rematch 配置参考：https://github.com/rematch/rematch/tree/next/examples\n\nimport { init, RematchDispatch, RematchRootState } from '@rematch/core'\nimport { models, RootModel } from './models'\nimport immerPlugin from '@rematch/immer'\n\nexport const store = init<RootModel>({\n  models,\n  plugins: [immerPlugin()],\n})\n\nexport type Store = typeof store\nexport type Dispatch = RematchDispatch<RootModel>\nexport type RootState = RematchRootState<RootModel>\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.less'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\nimport { Provider } from 'react-redux'\nimport { store } from './store'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}